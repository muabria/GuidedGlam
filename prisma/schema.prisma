// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
    id Int @id @default(autoincrement())
    username String @unique
    email String
    password String
    posts Post[]
    isAdmin Boolean @default(false)
    comments Comment[]
}

model Post {
    id Int @id @default(autoincrement())
    title String
    content String
    rating Int
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int
    comments Comment[]
    @@unique([userId])
}

// model Equipment {
//     id Int @id @default(autoincrement())
//     name String @unique
//     description String
//     image String
//     posts Post[]
//     category Category @relation(fields: [categoryId], references: [id])
//     categoryId Int
//     brand String
//     purchaseLink String
//     priceRating Int
// }

model Comment {
    id Int @id @default(autoincrement())
    content String
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId Int
}

model Category {
    id Int @id @default(autoincrement())
    category String @unique
    // equipment Equipment[]
}